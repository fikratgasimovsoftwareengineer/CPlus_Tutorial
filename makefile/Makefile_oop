DB = -g
CXX = g++
INC_DIR = -I/include/
LHEADERS= multithread_server.h
CFDEBUG	= -g -Wall -Wextra
LIBS_1 = -lpthread
LIBS_2 = -lvlc
PATH_L1 = -L/usr/lib/x86_64-linux-gnu 
CFLAGS = -o
CFONE = -c	
TARGET = multithread_server
RM = rm -rf

all:	multithread_server

multithread_server:	multithread_server.o multithread_server.h
	echo "Compilation of object with only g++ -c that generates object file!"
	echo "Linking is only done with gcc -o after compilation! "
	$(CXX) multithread_server.o $(CFLAGS) multithread_server $(LIBS_1) $(LIBS_2)
	

multithread_server.o:	multithread_server.cpp
	echo "Create Object File with g++ -o in conjunction with -c"
	$(CXX) $(CFONE) multithread_server.cpp $(CFDEBUG) $(CFLAGS) multithread_server.o


multithread_server.h:	multithread_server.cpp
	echo	"Header File Target and GDB added!"
	$(CXX) $(CFONE) $(CFDEBUG) multithread_server.cpp $(INC_DIR)
       

clean:
	echo "****Cleaning****" 
	$(RM) *.o $(TARGET)
	




